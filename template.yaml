  AWSTemplateFormatVersion: '2010-09-09'
  Transform: AWS::Serverless-2016-10-31
  Description: >
    bookmarks-backend

    Sample SAM Template for bookmarks-backend

  # More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
  Globals:
    Function:
      Runtime: nodejs22.x
      Timeout: 3
      # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
      LoggingConfig:
        LogFormat: JSON
  Resources:
    BookmarkTableV2:
      Type: AWS::DynamoDB::Table
      Properties:
        # TableName: BookmarkTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: bookmarkId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: bookmarkId
            KeyType: RANGE
        StreamSpecification:
          StreamViewType: NEW_IMAGE

    BookmarkApi:
      Type: AWS::Serverless::Api
      Properties:
        Name: BookmarkApi
        StageName: prod
        Cors:
          AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
          AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
          AllowOrigin: "'https://main.d8co6pmurjf0r.amplifyapp.com'"
          AllowCredentials: true
        Auth:
          DefaultAuthorizer: CognitoAuthorizer
          AddDefaultAuthorizerToCorsPreflight: false
          Authorizers:
            CognitoAuthorizer:
              UserPoolArn: arn:aws:cognito-idp:us-east-1:359110058371:userpool/us-east-1_UkxSoZvmM

    CreateBookmarkFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: functions/createBookmark/
        Handler: app.handler
        Events:
          CreateBookmark:
            Type: Api
            Properties:
              RestApiId: !Ref BookmarkApi
              Path: /bookmarks
              Method: POST
              Auth:
                Authorizer: CognitoAuthorizer
        Environment:
          Variables:
            TABLE_NAME: !Ref BookmarkTableV2
        Policies:
          - DynamoDBCrudPolicy:
              TableName: !Ref BookmarkTableV2

    GetBookmarksFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: functions/getBookmarks/
        Handler: app.handler
        Events:
          GetBookmarks:
            Type: Api
            Properties:
              RestApiId: !Ref BookmarkApi
              Path: /bookmarks
              Method: GET
              Auth:
                Authorizer: CognitoAuthorizer
        Environment:
          Variables:
            TABLE_NAME: !Ref BookmarkTableV2
        Policies:
          - DynamoDBReadPolicy:
              TableName: !Ref BookmarkTableV2

    StreamProcessorFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: functions/streamProcessor/
        Handler: app.handler
        Events:
          BookmarkTableStream:
            Type: DynamoDB
            Properties:
              Stream: !GetAtt BookmarkTableV2.StreamArn
              StartingPosition: LATEST
        Policies:
          - Statement:
              - Effect: Allow
                Action: events:PutEvents
                Resource: "*"

    NewBookmarkTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: NewBookmarkTopic

    BookmarkCreatedRule:
      Type: AWS::Events::Rule
      Properties:
        Name: BookmarkCreatedRule
        EventPattern:
          source:
            - "bookmark.table"
          detail-type:
            - "BookmarkCreated"
        Targets:
          - Arn: !Ref NewBookmarkTopic
            Id: "SendToSNSTopic"

    AllowEventBridgeToPublishToSNS:
      Type: AWS::SNS::TopicPolicy
      Properties:
        Topics:
          - !Ref NewBookmarkTopic
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action: sns:Publish
              Resource: !Ref NewBookmarkTopic

    NewBookmarkSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref NewBookmarkTopic
        Protocol: email
        Endpoint: jellopops@gmail.com  # Replace with your email

    BookmarkContestTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: BookmarkContestEntries
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    BookmarkContestFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: functions/bookmarkContest/
        Handler: app.handler
        Policies:
          - DynamoDBCrudPolicy:
              TableName: BookmarkContestEntries
        Events:
          BookmarkCreatedEvent:
            Type: EventBridgeRule
            Properties:
              Pattern:
                source:
                  - "bookmark.table"
                detail-type:
                  - "BookmarkCreated"

  Outputs:
    # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
    # Find out more about other implicit resources you can reference within SAM
    # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
    ApiEndpoint:
      Description: "API Gateway endpoint URL"
      Value: !Sub "https://${BookmarkApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
